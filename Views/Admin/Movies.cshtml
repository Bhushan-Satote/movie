@{
    ViewData["Title"] = ViewData["PageTitle"];
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary"><i class="bi bi-film"></i> Manage Movies</h1>
        <a href="@Url.Action("AddMovie")" class="btn btn-primary" style="background: linear-gradient(45deg, #2196F3, #1565C0); border: none; padding: 0.8rem 1.5rem;">
            <i class="bi bi-plus-circle me-2"></i> Add New Movie
        </a>
    </div>

    <div class="card shadow-lg rounded-3 mb-4" style="border: none;">
        <div class="card-header bg-white py-4">
            <div class="row align-items-center g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchInput" class="form-control border-start-0" placeholder="Search movies..." style="box-shadow: none;">
                    </div>
                </div>
                <div class="col-md-3">
                    <select id="genreFilter" class="form-select" style="box-shadow: none;">
                        <option value="">All Genres</option>
                        <option value="Action">Action</option>
                        <option value="Drama">Drama</option>
                        <option value="Comedy">Comedy</option>
                        <option value="Sci-Fi">Sci-Fi</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select" style="box-shadow: none;">
                        <option value="">All Status</option>
                        <option value="true">Now Showing</option>
                        <option value="false">Coming Soon</option>
                    </select>
                </div>
                <div class="col-md-2 text-end">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary active px-4" id="tableView">
                            <i class="bi bi-list"></i>
                        </button>
                        <button type="button" class="btn btn-outline-primary px-4" id="cardView">
                            <i class="bi bi-grid"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <!-- Table View -->
            <div id="tableViewContent" class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead>
                        <tr class="bg-light">
                            <th class="py-3">Title</th>
                            <th class="py-3">Genre</th>
                            <th class="py-3">Duration</th>
                            <th class="py-3">Price</th>
                            <th class="py-3">Rating</th>
                            <th class="py-3">Status</th>
                            <th class="py-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var movie in ViewBag.Movies)
                        {
                            <tr class="movie-item align-middle" 
                                data-title="@movie.Title.ToLower()" 
                                data-genre="@movie.Genre" 
                                data-status="@movie.IsNowShowing.ToString().ToLower()">
                                <td>
                                    <div class="d-flex align-items-center gap-3">
                                        <img src="@(string.IsNullOrEmpty(movie.PosterURL) ? "/images/no-poster.jpg" : movie.PosterURL)" 
                                             class="rounded-3" style="width: 50px; height: 70px; object-fit: cover;" />
                                        <span class="fw-medium">@movie.Title</span>
                                    </div>
                                </td>
                                <td><span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2">@movie.Genre</span></td>
                                <td>@movie.Duration min</td>
                                <td><span class="fw-medium">â‚¹@movie.Price</span></td>
                                <td>
                                    <div class="text-warning">
                                        @for (var i = 1; i <= 10; i++)
                                        {
                                            if (i <= movie.Rating)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            else if (i - 0.5 <= movie.Rating)
                                            {
                                                <i class="bi bi-star-half"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star"></i>
                                            }
                                        }
                                    </div>
                                </td>
                                <td>
                                    @if (movie.IsNowShowing)
                                    {
                                        <span class="badge bg-success-subtle text-success px-3 py-2">Now Showing</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning-subtle text-warning px-3 py-2">Coming Soon</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#movieDetails_@movie.Id">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <a href="@Url.Action("EditMovie", new { id = movie.Id })" class="btn btn-sm btn-light">
                                            <i class="bi bi-pencil text-warning"></i>
                                        </a>
                                        <form method="post" action="@Url.Action("DeleteMovie", new { id = movie.Id })" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-light" onclick="return confirm('Are you sure you want to delete this movie?')">
                                                <i class="bi bi-trash text-danger"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>

                            <!-- Movie Details Modal -->
                            <div class="modal fade" id="movieDetails_@movie.Id" tabindex="-1">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content border-0">
                                        <div class="modal-header bg-light">
                                            <h5 class="modal-title fw-bold">@movie.Title</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body p-4">
                                            <div class="row g-4">
                                                <div class="col-md-4">
                                                    <img src="@(string.IsNullOrEmpty(movie.PosterURL) ? "/images/no-poster.jpg" : movie.PosterURL)" 
                                                         class="img-fluid rounded-3 shadow-sm" alt="@movie.Title">
                                                </div>
                                                <div class="col-md-8">
                                                    <h6 class="text-muted mb-3">Description</h6>
                                                    <p class="mb-4">@movie.Description</p>
                                                    <div class="row g-4">
                                                        <div class="col-md-6">
                                                            <p class="mb-2"><strong class="text-dark">Director:</strong> @movie.Director</p>
                                                            <p class="mb-2"><strong class="text-dark">Genre:</strong> @movie.Genre</p>
                                                            <p class="mb-2"><strong class="text-dark">Duration:</strong> @movie.Duration minutes</p>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <p class="mb-2"><strong class="text-dark">Language:</strong> @movie.Language</p>
                                                            <p class="mb-2"><strong class="text-dark">Release Date:</strong> @movie.ReleaseDate.ToShortDateString()</p>
                                                            <p class="mb-2"><strong class="text-dark">Price:</strong> â‚¹@movie.Price</p>
                                                        </div>
                                                    </div>
                                                    <h6 class="text-muted mb-3 mt-4">Cast</h6>
                                                    <p>@movie.Cast</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Card View -->
            <div id="cardViewContent" class="row g-4" style="display: none;">
                @foreach (var movie in ViewBag.Movies)
                {
                    <div class="col-md-4 movie-item" 
                         data-title="@movie.Title.ToLower()" 
                         data-genre="@movie.Genre" 
                         data-status="@movie.IsNowShowing.ToString().ToLower()">
                        <div class="card h-100 shadow-sm hover-lift" style="border: none; transition: transform 0.2s;">
                            <div class="position-relative">
                                <img src="@(string.IsNullOrEmpty(movie.PosterURL) ? "/images/no-poster.jpg" : movie.PosterURL)" 
                                     class="card-img-top" alt="@movie.Title" style="height: 350px; object-fit: cover;">
                                <div class="position-absolute top-0 end-0 m-3">
                                    @if (movie.IsNowShowing)
                                    {
                                        <span class="badge bg-success">Now Showing</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Coming Soon</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title fw-bold mb-3">@movie.Title</h5>
                                <p class="card-text text-muted mb-3 text-truncate">@movie.Description</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="badge bg-primary-subtle text-primary px-3 py-2">@movie.Genre</span>
                                    <span class="text-muted">@movie.Duration min</span>
                                </div>
                            </div>
                            <div class="card-footer bg-white border-0">
                                <div class="btn-group w-100" role="group">
                                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#movieDetails_@movie.Id">
                                        <i class="bi bi-eye me-2"></i> View
                                    </button>
                                    <a href="@Url.Action("EditMovie", new { id = movie.Id })" class="btn btn-outline-warning">
                                        <i class="bi bi-pencil me-2"></i> Edit
                                    </a>
                                    <form method="post" action="@Url.Action("DeleteMovie", new { id = movie.Id })" style="display: inline;">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Are you sure you want to delete this movie?')">
                                            <i class="bi bi-trash me-2"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .hover-lift:hover {
        transform: translateY(-5px);
    }
    
    .btn-group .btn {
        transition: all 0.2s;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #2196F3;
        box-shadow: 0 0 0 0.25rem rgba(33, 150, 243, 0.1);
    }
    
    .badge {
        font-weight: 500;
    }
    
    .modal-content {
        border-radius: 1rem;
    }
    
    .table th {
        font-weight: 600;
    }
</style>

@section Scripts {
    <script>
        // View toggle
        document.getElementById('tableView').addEventListener('click', function() {
            document.getElementById('tableViewContent').style.display = 'block';
            document.getElementById('cardViewContent').style.display = 'none';
            this.classList.add('active');
            document.getElementById('cardView').classList.remove('active');
        });

        document.getElementById('cardView').addEventListener('click', function() {
            document.getElementById('tableViewContent').style.display = 'none';
            document.getElementById('cardViewContent').style.display = 'flex';
            this.classList.add('active');
            document.getElementById('tableView').classList.remove('active');
        });

        // Search and filter functionality
        function filterMovies() {
            const searchText = document.getElementById('searchInput').value.toLowerCase();
            const selectedGenre = document.getElementById('genreFilter').value;
            const selectedStatus = document.getElementById('statusFilter').value;

            document.querySelectorAll('.movie-item').forEach(item => {
                const title = item.dataset.title;
                const genre = item.dataset.genre;
                const status = item.dataset.status;

                const matchesSearch = title.includes(searchText);
                const matchesGenre = !selectedGenre || genre.includes(selectedGenre);
                const matchesStatus = !selectedStatus || status === selectedStatus.toLowerCase();

                item.style.display = (matchesSearch && matchesGenre && matchesStatus) ? '' : 'none';
            });
        }

        // Add event listeners
        document.getElementById('searchInput').addEventListener('input', filterMovies);
        document.getElementById('genreFilter').addEventListener('change', filterMovies);
        document.getElementById('statusFilter').addEventListener('change', filterMovies);

        // Auto-hide alerts after 5 seconds
        setTimeout(function () {
            $('.alert').alert('close');
        }, 5000);
    </script>
}